grammar uk.ac.kcl.mde.awk.Awk with org.eclipse.xtext.common.Terminals

generate awk "http://www.ac.uk/kcl/mde/awk/Awk"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

AwkProgram:
	filename = Filename
	sections += Section*
;

enum SectionHeader:
	start | body | end
;

Section:
	section=SectionHeader "{"
		statements+=Statement*
	"}"
;

Filename:
	"filename(" file=StringOption ")"
;

Statement:
	VariableDeclaration |
	MatchStatement |
	PrintStatement |
	RowStatement
;

VariableDeclaration:
	'var' name=ID '=' val=VariableOptions ';'
;

MatchStatement:
	'match' exp=MatchDeclaration ';'
;

MatchDeclaration:
	StringOption | VarReference
;

PrintStatement:
	{PrintStatement}
	'print' option=PrintColumns ';'
;

RowStatement:
	{RowStatement} 
	'row' '{'
		statements+=ColStatement*
	'}'
;

ColStatement:
	col=PrintColumns ',' divider=STRING ';' 
;

PrintColumns:
	IntOption | StringOption | ColOption | VarReference
;

IntOption:
	val=INT
;

StringOption:
	val=STRING
;

ColOption:
	val=ColumnDeclaration
;

VarReference:
	val=[VariableDeclaration]
;

ColumnDeclaration:
	'column' columnIndex=INT
;

VariableOptions:
	StringOption | IntOption
;


Addition returns Expression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns Expression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns Expression:
	StringOption |
	IntOption |
 	ColOption |
	VarReference |
	"(" Multiplication ")"
;