/*
 * generated by Xtext 2.20.0
 */
package uk.ac.kcl.mde.gawk.scoping

import static org.eclipse.xtext.scoping.Scopes.*
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import uk.ac.kcl.mde.gawk.gawk.VarReference
import uk.ac.kcl.mde.gawk.gawk.MatchStatement
import uk.ac.kcl.mde.gawk.gawk.Section
import uk.ac.kcl.mde.gawk.gawk.VariableDeclaration

/** 
 * This class contains custom scoping description.
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class GawkScopeProvider extends AbstractGawkScopeProvider {
	def IScope scope_VarReference_var(VarReference context, EReference ref) {
		context.visibleVariablesScope
	}
	
	dispatch def IScope visibleVariablesScope(MatchStatement ms) {
		ms.eContainer.visibleVariablesScope
	}
	
	dispatch def IScope visibleVariablesScope(Section sc) {
		scopeFor(sc.statements.filter(VariableDeclaration))
	}
	
//	dispatch def IScope visibleVariablesScope(LoopStatement ls) {
//		ls.eContainer.internalVisibleVariablesScope
//	}
//
//	dispatch def IScope internalVisibleVariablesScope(TurtleProgram tp) {
//		scopeFor(tp.statements.filter(VariableDeclaration))
//	}
//	
//	dispatch def IScope internalVisibleVariablesScope(LoopStatement ls) {
//		scopeFor(ls.statements.filter(VariableDeclaration), ls.eContainer.internalVisibleVariablesScope)
//	}

}
